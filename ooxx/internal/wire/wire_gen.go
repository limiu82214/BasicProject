// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wire

import (
	"github.com/google/wire"
	"github.com/limiu82214/GoBasicProject/ooxx/internal/board/board_adapter/in/board_adapter_in_goprompt"
	"github.com/limiu82214/GoBasicProject/ooxx/internal/board/board_adapter/in/board_adapter_in_player"
	"github.com/limiu82214/GoBasicProject/ooxx/internal/board/board_adapter/out/board_adapter_out_leveldb"
	"github.com/limiu82214/GoBasicProject/ooxx/internal/board/board_application"
	"github.com/limiu82214/GoBasicProject/ooxx/internal/player/player_adapter/in/player_adapter_in_goprompt"
	"github.com/limiu82214/GoBasicProject/ooxx/internal/player/player_adapter/out/player_adapter_out_board"
	"github.com/limiu82214/GoBasicProject/ooxx/internal/player/player_adapter/out/player_adapter_out_leveldb"
	"github.com/limiu82214/GoBasicProject/ooxx/internal/player/player_application"
	"github.com/limiu82214/GoBasicProject/ooxx/pkg/leveldb"
)

// Injectors from wire.go:

func InitPlayerAdapterInGoPrompt() player_adapter_in_goprompt.IPlayerGopromptAdapter {
	db := leveldb.GetInst()
	iLoadBoardAdapter := board_adapter_out_leveldb.New(db)
	iGetBoardStateUseCase := board_application.NewGetBoardStateUseCase(iLoadBoardAdapter)
	iSetStateUseCase := board_application.NewSetStateUseCase(iLoadBoardAdapter)
	iResetBoardStateUseCase := board_application.NewResetBoardStateUseCase(iLoadBoardAdapter)
	iWhoWinUseCase := board_application.NewWhoWinUseCase(iLoadBoardAdapter)
	iBoardPlayerAdapter := board_adapter_in_player.New(iGetBoardStateUseCase, iSetStateUseCase, iResetBoardStateUseCase, iWhoWinUseCase)
	iBoardAdapter := player_adapter_out_board.New(iBoardPlayerAdapter)
	player_application_port_inIGetBoardStateUseCase := player_application.NewGetBoardStateUseCase(iBoardAdapter)
	iLoadPlayerAdapter := player_adapter_out_leveldb.New(db)
	iPutChessUseCase := player_application.NewPutChessUseCase(iBoardAdapter, iLoadPlayerAdapter)
	iResetBoardUseCase := player_application.NewResetBoardUseCase(iBoardAdapter)
	player_application_port_inIWhoWinUseCase := player_application.NewWhoWinUseCase(iBoardAdapter)
	iSetPlayerInfoUseCase := player_application.NewSetPlayerInfoUseCase(iLoadPlayerAdapter)
	iPlayerGopromptAdapter := player_adapter_in_goprompt.New(player_application_port_inIGetBoardStateUseCase, iPutChessUseCase, iResetBoardUseCase, player_application_port_inIWhoWinUseCase, iSetPlayerInfoUseCase)
	return iPlayerGopromptAdapter
}

func InitBoardAdapterInGoPrompt() board_adapter_in_goprompt.IBoardGopromptAdapter {
	db := leveldb.GetInst()
	iLoadBoardAdapter := board_adapter_out_leveldb.New(db)
	iSetStateUseCase := board_application.NewSetStateUseCase(iLoadBoardAdapter)
	iWhoWinUseCase := board_application.NewWhoWinUseCase(iLoadBoardAdapter)
	iGetBoardStateUseCase := board_application.NewGetBoardStateUseCase(iLoadBoardAdapter)
	iResetBoardStateUseCase := board_application.NewResetBoardStateUseCase(iLoadBoardAdapter)
	iBoardGopromptAdapter := board_adapter_in_goprompt.New(iSetStateUseCase, iWhoWinUseCase, iGetBoardStateUseCase, iResetBoardStateUseCase)
	return iBoardGopromptAdapter
}

// wire.go:

var DBSet = wire.NewSet(leveldb.GetInst)

var BoardApplicationSet = wire.NewSet(board_application.NewGetBoardStateUseCase, board_application.NewSetStateUseCase, board_application.NewResetBoardStateUseCase, board_application.NewWhoWinUseCase)

var PlayerApplicationSet = wire.NewSet(player_application.NewGetBoardStateUseCase, player_application.NewPutChessUseCase, player_application.NewResetBoardUseCase, player_application.NewWhoWinUseCase, player_application.NewSetPlayerInfoUseCase)
